{"version":3,"sources":["source-maps:///components/NumberTrio.vue","node-modules:///vue-runtime-helpers/dist/normalize-component.mjs","source-maps:///components/FormattedNumber.vue","source-maps:///components/NoDoubleClickSelectable.vue","source-maps:///components/Main.vue","source-maps:///index.js"],"names":["script","name","props","value","type","String","required","[object Object]","Boolean","match","position","Number","count","padding","computed","this","parts","part1","part2","el","isLast","substring","length","normalizeComponent","template","style","scopeId","isFunctionalTemplate","moduleIdentifier","shadowMode","createInjector","createInjectorSSR","createInjectorShadow","options","render","staticRenderFns","_compiled","functional","_scopeId","hook","context","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","call","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","originalRender","renderWithStyleInjection","h","existing","beforeCreate","concat","__vue_script__","script$1","number","precision","default","isNegative","integer","decimal","toString","split","subDecimal","getTrios","methods","trios","offset","i","part","push","components","NumberTrio","__vue_component__","__vue_script__$1","script$2","timerId","$el","userSelect","window","getSelection","empty","clearTimeout","setTimeout","__vue_script__$2","script$3","MAX_SAFE_INTEGER","color","randomHexColor","FormattedNumber","__vue_component__$1","NoDoubleClickSelectable","__vue_component__$2","numbers","Math","trunc","random","join","__vue_script__$3","Vue","createElement","MainComponent","$mount"],"mappings":"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","sourcesContent":["<template lang=\"pug\">\nspan.trio\n  span(v-if=\"part1\") {{part1}}\n  span.padded(v-if=\"part2\" :style=\"{letterSpacing: padding}\") {{part2}}\n</template>\n\n<script>\nexport default {\n  name: \"NumberTrio\",\n  props: {\n    value: {\n      type: String,\n      required: true,\n      validator(value) {\n        return Boolean(value.match(/^\\d+$/));\n      }\n    },\n    position: {\n      type: Number,\n      required: true,\n    },\n    count: {\n      type: Number,\n      required: true,\n    },\n    padding: { // letterSpacing value, e.g., \"5px\"\n      type: String\n    },\n  },\n  computed: {\n    part1() {\n      return this.parts.part1;\n    },\n    part2() {\n      return this.parts.part2;\n    },\n    parts() {\n      const el = this.value;\n      if (this.isLast) {\n        return {\n          part1: el,\n          part2: \"\"\n        };\n      } else {\n        return {\n          part1: el.substring(0, el.length - 1),\n          part2: el.substring(el.length - 1)\n        };\n      }\n    },\n    isLast() {\n      return this.position === this.count - 1;\n    }\n  }\n};\n</script>","function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {\r\n    if (typeof shadowMode !== 'boolean') {\r\n        createInjectorSSR = createInjector;\r\n        createInjector = shadowMode;\r\n        shadowMode = false;\r\n    }\r\n    // Vue.extend constructor export interop.\r\n    const options = typeof script === 'function' ? script.options : script;\r\n    // render functions\r\n    if (template && template.render) {\r\n        options.render = template.render;\r\n        options.staticRenderFns = template.staticRenderFns;\r\n        options._compiled = true;\r\n        // functional template\r\n        if (isFunctionalTemplate) {\r\n            options.functional = true;\r\n        }\r\n    }\r\n    // scopedId\r\n    if (scopeId) {\r\n        options._scopeId = scopeId;\r\n    }\r\n    let hook;\r\n    if (moduleIdentifier) {\r\n        // server build\r\n        hook = function (context) {\r\n            // 2.3 injection\r\n            context =\r\n                context || // cached call\r\n                    (this.$vnode && this.$vnode.ssrContext) || // stateful\r\n                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional\r\n            // 2.2 with runInNewContext: true\r\n            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\r\n                context = __VUE_SSR_CONTEXT__;\r\n            }\r\n            // inject component styles\r\n            if (style) {\r\n                style.call(this, createInjectorSSR(context));\r\n            }\r\n            // register component module identifier for async chunk inference\r\n            if (context && context._registeredComponents) {\r\n                context._registeredComponents.add(moduleIdentifier);\r\n            }\r\n        };\r\n        // used by ssr in case component is cached and beforeCreate\r\n        // never gets called\r\n        options._ssrRegister = hook;\r\n    }\r\n    else if (style) {\r\n        hook = shadowMode\r\n            ? function (context) {\r\n                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));\r\n            }\r\n            : function (context) {\r\n                style.call(this, createInjector(context));\r\n            };\r\n    }\r\n    if (hook) {\r\n        if (options.functional) {\r\n            // register for functional component in vue file\r\n            const originalRender = options.render;\r\n            options.render = function renderWithStyleInjection(h, context) {\r\n                hook.call(context);\r\n                return originalRender(h, context);\r\n            };\r\n        }\r\n        else {\r\n            // inject component registration as beforeCreate hook\r\n            const existing = options.beforeCreate;\r\n            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];\r\n        }\r\n    }\r\n    return script;\r\n}\n\nexport default normalizeComponent;\n//# sourceMappingURL=normalize-component.mjs.map\n","<!--\n  It works OK only with integer numbers and partially with decimal numbers\n  (no support of `1.2e-34`, `Infinity`, `NaN`, for example)\n -->\n<template lang=\"pug\">\nspan.formatted-number\n  span.minus(v-if=\"isNegative\") -\n  span.integer\n    NumberTrio(\n        v-for=\"(integerTrio, index) of integerTrios\"\n        :value=\"integerTrio\"\n        :position=\"index\"\n        :count=\"integerTrios.length\"\n        :key=\"index\"\n        :padding=\"padding\"\n    )\n  span.point(v-if=\"decimalTrimmed\") .\n  span.decimal(v-if=\"decimalTrimmed\") {{decimalTrimmed}}\n</template>\n\n<script>\nimport NumberTrio from \"./NumberTrio.vue\";\n\nexport default {\n  name: \"FormattedNumber\",\n  props: {\n    number: {\n      type: Number,\n      required: true,\n    },\n    precision: { // Count of numbers after the point (the dot), if the integer part contains 1 digit\n      type: Number,\n      default: 2 // result for \"3\": \"1.123\", \"10.12\", \"100.1\", \"1000\"; for \"2\": \"1.01\", \"10\", \"100\";\n    },\n    padding: {   // letterSpacing value, e.g., \"5px\"\n      type: String,\n      default: null\n    }\n  },\n  computed: {\n    /** @returns {Boolean} */\n    isNegative() {\n      return this.parts.isNegative;\n    },\n    /** @returns {String} */\n    integer() {\n      return this.parts.integer;\n    },\n    /** @returns {String} */\n    decimal() {\n      return this.parts.decimal;\n    },\n    parts() {\n      const [integer, decimal] = this.number.toString().split(\".\");\n      const isNegative = this.number < 0;\n      return {\n        isNegative,\n        integer: isNegative ? integer.substring(1) : integer,\n        decimal\n      };\n    },\n    decimalTrimmed() {\n      const [integer, decimal] = [this.integer, this.decimal];\n      const precision = this.precision;\n\n      if (decimal) {\n        const subDecimal = decimal.substring(0, precision + 1 - integer.length);\n        // if contains only zeros\n        return subDecimal.match(/^0*$/) ? \"\" : subDecimal;\n      }\n      return null;\n    },\n    integerTrios() {\n      return this.getTrios(this.integer);\n    }\n  },\n  methods: {\n    getTrios(number) {\n      const trios = [];\n      const offset = ((number.length % 3) - 3) % 3;\n      for (let i = offset; i < number.length; i += 3) {\n        const part = number.substring(i, i + 3);\n        trios.push(part);\n      }\n      return trios;\n    }\n  },\n  components: {NumberTrio}\n};\n</script>","<template lang=\"pug\">\nspan.no-double-click-selectable(@click=\"preventUnnecessarySelecting\")\n  slot\n</template>\n\n<script>\nexport default {\n  name: \"NoDoubleClickSelectable\",\n  data() {\n    return {\n      timerId: null\n    }\n  },\n  methods: {\n    preventUnnecessarySelecting() {\n      this.$el.style.userSelect = \"none\";\n      window.getSelection().empty();\n\n      clearTimeout(this.timerId);\n      this.timerId = setTimeout(() => {\n        this.$el.style.userSelect = \"\";\n      }, 500);\n    }\n  }\n};\n</script>","<template lang=\"pug\">\ndiv.main\n  span.number(@click=\"onClick\")\n    NoDoubleClickSelectable\n      FormattedNumber(:style=\"{color}\" :number=\"value\")\n</template>\n\n<script>\nimport FormattedNumber from \"./FormattedNumber.vue\";\nimport NoDoubleClickSelectable from \"./NoDoubleClickSelectable.vue\";\n\nexport default {\n  name: \"Main\",\n  data() {\n    return {\n      value: Number.MAX_SAFE_INTEGER,\n      color: null\n    }\n  },\n  methods: {\n    onClick() {\n      this.color = randomHexColor();\n    }\n  },\n  components: {\n    FormattedNumber,\n    NoDoubleClickSelectable\n  }\n};\n\nfunction randomHexColor() {\n  const numbers = [\n    Number(Math.trunc(Math.random() * 256)),\n    Number(Math.trunc(Math.random() * 256)),\n    Number(Math.trunc(Math.random() * 256))\n  ];\n  return `rgb(${numbers.join()})`;\n}\n</script>\n\n<style lang=\"sass\" scoped>\n.main\n  display: flex\n  flex-direction: column\n  justify-content: center\n  align-items: center\n  height: 100%\n\n.main::v-deep\n  .formatted-number\n    font-size: 8vw\n    color: cornflowerblue\n    text-shadow: 0 0 2vw #08080840\n    .trio\n      .padded\n        letter-spacing: 1.6vw\n\n@media all and (min-width: 1500px)\n  .main::v-deep\n    .formatted-number\n      font-size: 120px\n      text-shadow: 0 0 30px #08080840\n      .trio\n        .padded\n          letter-spacing: 24px\n</style>","import Vue from \"vue\";\nimport MainComponent from \"./components/Main.vue\";\n\nnew Vue({\n    render: createElement => createElement(MainComponent),\n}).$mount(\"#app\");"]}